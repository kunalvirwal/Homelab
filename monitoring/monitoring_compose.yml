# This compose is a combined compose for the complete monitoring setup of prometheus, grafana, node-exporter and cadvisor and tailscale-sidecar if needed
# The ./grafana folder must belong to user grafana with UID and GID 472
# The ./prometheus-data folder must belong to user nobody with UID and GID 65534
# The ./prometheus-dev folder should have a prometheus.yml file which is also provided in this repo

# version: "2.2"

services:
  # This container should only be used if you want to scrape metrics from your tailscale nodes
  prometheus-sidecar:
    image: tailscale/tailscale:latest
    hostname: prometheus-sidecar
    environment:
      - TS_AUTHKEY=tskey-client-notAReal-OAuthClientSecret1Atawk
      - "TS_EXTRA_ARGS=--advertise-tags=tag:prometheus --reset"  # for an OAuth token the joining container will be by default epimeral and have key expiry disabled.
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
    volumes:
      - ./prometheus-sidecar/config:/config
      - ./prometheus-sidecar/state:/var/lib/tailscale
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    healthcheck:
      test: ["CMD", "tailscale", "status"]
      interval: 5s
      timeout: 4s
      retries: 5
      start_period: 15s
    restart: always

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    network_mode: service:prometheus-sidecar   # use network_mode and depends_on field only if using a tailscale sidecar containers
    depends_on:
      prometheus-sidecar:
        condition: service_healthy
        restart: true   # ensures prometheus restarts when side car restarts
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.min-block-duration=1h'
      - '--storage.tsdb.retention.time=7d'
#    ports:          # use this only if not using for scraping tailscale nodes with sidecar container
#      - 7070:9090

    volumes:
      - ./prometheus-dev:/etc/prometheus
      - ./prometheus-data:/prometheus

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - 3030:3000
    volumes:
      - ./grafana:/var/lib/grafana

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    restart: unless-stopped
    pid: host
    # ports:
    #   - "<NodeTailnetIP>:9100:9100"    # Use when you dont want to expose the metrics publically but only on the Tailnet
    command:
      - '--path.rootfs=/host'
    volumes:
      - '/:/host:ro,rslave'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    devices:
      - /dev/kmsg
    ports:
      - 5050:8080    # Don't use if using Tailnet
      # - "<NodeTailnetIP>:5050:8080"    # Use when you dont want to expose the metrics publically but only on the Tailnet
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro